{"version":3,"file":"application_module.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/application_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAIH,gCAAyD,mBAAmB,CAAC,CAAA;AAC7E,mCAAqC,sBAAsB,CAAC,CAAA;AAC5D,iCAA+F,qCAAqC,CAAC,CAAA;AACrI,mBAAiD,MAAM,CAAC,CAAA;AACxD,yBAAuB,mBAAmB,CAAC,CAAA;AAC3C,2CAAuC,qCAAqC,CAAC,CAAA;AAC7E,mCAAgC,6BAA6B,CAAC,CAAA;AAC9D,yCAA8D,mCAAmC,CAAC,CAAA;AAClG,2BAAwB,qBAAqB,CAAC,CAAA;AAC9C,yBAAuB,YAAY,CAAC,CAAA;AACpC,wBAAqB,gBAAgB,CAAC,CAAA;AAEtC,IAAI,QAAc,CAAC,CAAE,uDAAuD;AAE5E;IACE,MAAM,CAAC,qDAAwB,CAAC,IAAI,CAAC;AACvC,CAAC;AAFe,wCAAgC,mCAE/C,CAAA;AAED;IACE,MAAM,CAAC,yCAAsB,CAAC;AAChC,CAAC;AAFe,+BAAuB,0BAEtC,CAAA;AAED;IACE,MAAM,CAAC,yCAAsB,CAAC;AAChC,CAAC;AAFe,+BAAuB,0BAEtC,CAAA;AAED,sBAA6B,MAAc;IACzC,0DAA0D;IAC1D,gEAAgE;IAChE,qEAAqE;IACrE,+BAA+B;IAC/B,8DAA8D;IAC9D,0CAA0C;IAC1C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,IAAI,gBAAM,CAAC,EAAC,oBAAoB,EAAE,2BAAS,EAAE,EAAC,CAAC,CAAC;AACzD,CAAC;AAXe,oBAAY,eAW3B,CAAA;AAED;;;;;GAKG;AACU,oCAA4B,GAAyC,EAAE,CAAC;AACrF;IAAA;IAuBA,CAAC;IAtBD,kBAAkB;IACX,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,mBAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,gBAAM;4BACf,UAAU,EAAE,YAAY;4BACxB,IAAI,EAAO,CAAC,CAAC,IAAI,qBAAgB,EAAE,EAAE,IAAI,qBAAgB,EAAE,EAAE,gBAAM,CAAC,CAAC;yBACtE;wBACD,iCAAe;wBACf,EAAC,OAAO,EAAE,gCAAc,EAAE,WAAW,EAAE,iCAAe,EAAC;wBACvD,mBAAQ;wBACR,EAAC,OAAO,EAAE,sCAAiB,EAAE,WAAW,EAAE,mBAAQ,EAAC;wBACnD,EAAC,OAAO,EAAE,qDAAwB,EAAE,UAAU,EAAE,gCAAgC,EAAE,IAAI,EAAE,EAAE,EAAC;wBAC3F,2CAAsB;wBACtB,sBAAS;wBACT,EAAC,OAAO,EAAE,kCAAe,EAAE,UAAU,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAAE,EAAC;wBACzE,EAAC,OAAO,EAAE,kCAAe,EAAE,UAAU,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAAE,EAAC;wBACzE,EAAC,OAAO,EAAE,iDAAsB,EAAE,QAAQ,EAAE,kDAAuB,EAAC;qBACrE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,wBAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,yBAAiB,oBAuB7B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../src/facade/lang';\n\nimport {ApplicationRef, ApplicationRef_, isDevMode} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {OptionalMetadata, SkipSelfMetadata} from './di';\nimport {Compiler} from './linker/compiler';\nimport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {ComponentResolver} from './linker/component_resolver';\nimport {DynamicComponentLoader, DynamicComponentLoader_} from './linker/dynamic_component_loader';\nimport {ViewUtils} from './linker/view_utils';\nimport {NgModule} from './metadata';\nimport {NgZone} from './zone/ng_zone';\n\nlet __unused: Type;  // avoid unused import when Type union types are erased\n\nexport function _componentFactoryResolverFactory() {\n  return ComponentFactoryResolver.NULL;\n}\n\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n\nexport function createNgZone(parent: NgZone): NgZone {\n  // If an NgZone is already present in the parent injector,\n  // use that one. Creating the NgZone in the same injector as the\n  // application is dangerous as some services might get created before\n  // the NgZone has been created.\n  // We keep the NgZone factory in the application providers for\n  // backwards compatibility for now though.\n  if (parent) {\n    return parent;\n  }\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n\n/**\n * A default set of providers which should be included in any Angular\n * application, regardless of the platform it runs onto.\n *\n * @deprecated Inlcude `ApplicationModule` instead.\n */\nexport const APPLICATION_COMMON_PROVIDERS: Array<Type|{[k: string]: any}|any[]> = [];\nexport class ApplicationModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    {\n      provide: NgZone,\n      useFactory: createNgZone,\n      deps: <any>[[new SkipSelfMetadata(), new OptionalMetadata(), NgZone]]\n    },\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    Compiler,\n    {provide: ComponentResolver, useExisting: Compiler},\n    {provide: ComponentFactoryResolver, useFactory: _componentFactoryResolverFactory, deps: []},\n    APP_ID_RANDOM_PROVIDER,\n    ViewUtils,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: []},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: []},\n    {provide: DynamicComponentLoader, useClass: DynamicComponentLoader_},\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}