{"version":3,"file":"platform_core_providers.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/platform_core_providers.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAIH,gCAAwC,mBAAmB,CAAC,CAAA;AAC5D,wBAAsB,WAAW,CAAC,CAAA;AAElC,2BAAmC,yBAAyB,CAAC,CAAA;AAC7D,iCAA8B,+BAA+B,CAAC,CAAA;AAC9D,4BAAkC,2BAA2B,CAAC,CAAA;AAE9D;IACE,MAAM,CAAC,sBAAS,CAAC;AACnB,CAAC;AAED,IAAI,QAAc,CAAC,CAAE,oCAAoC;AAEzD;;;GAGG;AACU,+BAAuB,GAAmC;IACrE,8BAAY,EAAE,EAAC,OAAO,EAAE,6BAAW,EAAE,WAAW,EAAE,8BAAY,EAAC;IAC/D,EAAC,OAAO,EAAE,sBAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAC;IACtD,EAAC,OAAO,EAAE,kCAAe,EAAE,WAAW,EAAE,sBAAS,EAAC,EAAE,iCAAmB,EAAE,iBAAO;CACjF,CAAC;AAEF;;;;GAIG;AACU,iCAAyB,GAAG,+BAAuB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../src/facade/lang';\n\nimport {PlatformRef, PlatformRef_} from './application_ref';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {ReflectorReader} from './reflection/reflector_reader';\nimport {TestabilityRegistry} from './testability/testability';\n\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nvar __unused: Type;  // prevent missing use Dart warning.\n\n/**\n * A default set of providers which should be included in any Angular platform.\n * @experimental\n */\nexport const PLATFORM_CORE_PROVIDERS: Array<any|Type|Provider|any[]> = [\n  PlatformRef_, {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  {provide: ReflectorReader, useExisting: Reflector}, TestabilityRegistry, Console\n];\n\n/**\n * A default set of providers which should be included in any Angular platform.\n *\n * @deprecated Use PLATFORM_CORE_PROVIDERS instead!\n */\nexport const PLATFORM_COMMON_PROVIDERS = PLATFORM_CORE_PROVIDERS;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}