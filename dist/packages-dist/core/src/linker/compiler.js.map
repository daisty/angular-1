{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {BaseException} from '../facade/exceptions';\nimport {ConcreteType, Type, stringify} from '../facade/lang';\nimport {ViewEncapsulation} from '../metadata';\nimport {NgModuleMetadata} from '../metadata/ng_module';\n\nimport {ComponentFactory} from './component_factory';\nimport {ComponentResolver} from './component_resolver';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n *\n * @stable\n */\nexport class ComponentStillLoadingError extends BaseException {\n  constructor(public compType: Type) {\n    super(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  }\n}\n\n/**\n * Low-level service for running the angular compiler duirng runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * @stable\n */\nexport class Compiler {\n  /**\n   * Returns the injector with which the compiler has been created.\n   *\n   * @internal\n   */\n  get injector(): Injector {\n    throw new BaseException(`Runtime compiler is not loaded. Tried to read the injector.`);\n  }\n\n  /**\n   * Loads the template and styles of a component and returns the associated `ComponentFactory`.\n   */\n  compileComponentAsync<T>(component: ConcreteType<T>): Promise<ComponentFactory<T>> {\n    throw new BaseException(\n        `Runtime compiler is not loaded. Tried to compile ${stringify(component)}`);\n  }\n  /**\n   * Compiles the given component. All templates have to be either inline or compiled via\n   * `compileComponentAsync` before. Otherwise throws a {@link ComponentStillLoadingError}.\n   */\n  compileComponentSync<T>(component: ConcreteType<T>): ComponentFactory<T> {\n    throw new BaseException(\n        `Runtime compiler is not loaded. Tried to compile ${stringify(component)}`);\n  }\n  /**\n   * Compiles the given NgModule. All templates of the components listed in `precompile`\n   * have to be either inline or compiled before via `compileComponentAsync` /\n   * `compileNgModuleAsync`. Otherwise throws a {@link ComponentStillLoadingError}.\n   */\n  compileNgModuleSync<T>(moduleType: ConcreteType<T>, metadata: NgModuleMetadata = null):\n      NgModuleFactory<T> {\n    throw new BaseException(\n        `Runtime compiler is not loaded. Tried to compile ${stringify(moduleType)}`);\n  }\n\n  compileNgModuleAsync<T>(moduleType: ConcreteType<T>, metadata: NgModuleMetadata = null):\n      Promise<NgModuleFactory<T>> {\n    throw new BaseException(\n        `Runtime compiler is not loaded. Tried to compile ${stringify(moduleType)}`);\n  }\n\n  /**\n   * Clears all caches\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type) {}\n}\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n}\n\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nexport abstract class CompilerFactory {\n  static mergeOptions(defaultOptions: CompilerOptions = {}, newOptions: CompilerOptions = {}):\n      CompilerOptions {\n    return {\n      useDebug: _firstDefined(newOptions.useDebug, defaultOptions.useDebug),\n      useJit: _firstDefined(newOptions.useJit, defaultOptions.useJit),\n      defaultEncapsulation:\n          _firstDefined(newOptions.defaultEncapsulation, defaultOptions.defaultEncapsulation),\n      providers: _mergeArrays(defaultOptions.providers, newOptions.providers)\n    };\n  }\n\n  withDefaults(options: CompilerOptions = {}): CompilerFactory {\n    return new _DefaultApplyingCompilerFactory(this, options);\n  }\n  abstract createCompiler(options?: CompilerOptions): Compiler;\n}\n\nclass _DefaultApplyingCompilerFactory extends CompilerFactory {\n  constructor(private _delegate: CompilerFactory, private _options: CompilerOptions) { super(); }\n\n  createCompiler(options: CompilerOptions = {}): Compiler {\n    return this._delegate.createCompiler(CompilerFactory.mergeOptions(this._options, options));\n  }\n}\n\nfunction _firstDefined<T>(...args: T[]): T {\n  for (var i = 0; i < args.length; i++) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(...parts: any[][]): any[] {\n  let result: any[] = [];\n  parts.forEach((part) => result.push.apply(result, part));\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}