/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
"use strict";
var lang_1 = require('../../src/facade/lang');
var SVG_PREFIX = ':svg:';
var document = typeof global['document'] == 'object' ?
    global['document'] :
    null;
function extractSchema() {
    var SVGGraphicsElement = global['SVGGraphicsElement'];
    var SVGAnimationElement = global['SVGAnimationElement'];
    var SVGGeometryElement = global['SVGGeometryElement'];
    var SVGComponentTransferFunctionElement = global['SVGComponentTransferFunctionElement'];
    var SVGGradientElement = global['SVGGradientElement'];
    var SVGTextContentElement = global['SVGTextContentElement'];
    var SVGTextPositioningElement = global['SVGTextPositioningElement'];
    if (!document || !SVGGraphicsElement)
        return null;
    var descMap = new Map();
    var visited = {};
    var element = document.createElement('video');
    var svgAnimation = document.createElementNS('http://www.w3.org/2000/svg', 'set');
    var svgPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
    var svgFeFuncA = document.createElementNS('http://www.w3.org/2000/svg', 'feFuncA');
    var svgGradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');
    var svgText = document.createElementNS('http://www.w3.org/2000/svg', 'text');
    extractProperties(Node, element, visited, descMap, '*', '');
    extractProperties(Element, element, visited, descMap, '*', '');
    extractProperties(HTMLElement, element, visited, descMap, '', '*');
    extractProperties(HTMLMediaElement, element, visited, descMap, 'media', '');
    extractProperties(SVGElement, svgText, visited, descMap, SVG_PREFIX, '*');
    extractProperties(SVGGraphicsElement, svgText, visited, descMap, SVG_PREFIX + 'graphics', SVG_PREFIX);
    extractProperties(SVGAnimationElement, svgAnimation, visited, descMap, SVG_PREFIX + 'animation', SVG_PREFIX);
    extractProperties(SVGGeometryElement, svgPath, visited, descMap, SVG_PREFIX + 'geometry', SVG_PREFIX);
    extractProperties(SVGComponentTransferFunctionElement, svgFeFuncA, visited, descMap, SVG_PREFIX + 'componentTransferFunction', SVG_PREFIX);
    extractProperties(SVGGradientElement, svgGradient, visited, descMap, SVG_PREFIX + 'gradient', SVG_PREFIX);
    extractProperties(SVGTextContentElement, svgText, visited, descMap, SVG_PREFIX + 'textContent', SVG_PREFIX + 'graphics');
    extractProperties(SVGTextPositioningElement, svgText, visited, descMap, SVG_PREFIX + 'textPositioning', SVG_PREFIX + 'textContent');
    var keys = Object.getOwnPropertyNames(window).filter(function (k) { return k.endsWith('Element') && (k.startsWith('HTML') || k.startsWith('SVG')); });
    keys.sort();
    keys.forEach(function (name) {
        return extractRecursiveProperties(visited, descMap, window[name]);
    });
    return descMap;
}
exports.extractSchema = extractSchema;
function extractRecursiveProperties(visited, descMap, type) {
    var name = extractName(type);
    if (visited[name])
        return name; // already been here
    var superName = '';
    if (name != '*') {
        superName = extractRecursiveProperties(visited, descMap, type.prototype.__proto__.constructor);
    }
    var instance = null;
    name.split(',').forEach(function (tagName) {
        instance = isSVG(type) ?
            document.createElementNS('http://www.w3.org/2000/svg', tagName.replace(SVG_PREFIX, '')) :
            document.createElement(tagName);
        var htmlType = type;
        if (tagName == 'cite')
            htmlType = HTMLElement;
        if (!(instance instanceof htmlType)) {
            throw new Error("Tag <" + tagName + "> is not an instance of " + htmlType['name']);
        }
    });
    extractProperties(type, instance, visited, descMap, name, superName);
    return name;
}
function extractProperties(type, instance, visited, descMap, name, superName) {
    if (!type)
        return;
    visited[name] = true;
    var fullName = name + (superName ? '^' + superName : '');
    var props = descMap.has(fullName) ? descMap.get(fullName) : [];
    var prototype = type.prototype;
    var keys = Object.getOwnPropertyNames(prototype);
    keys.sort();
    keys.forEach(function (n) {
        if (n.startsWith('on')) {
            props.push('*' + n.substr(2));
        }
        else {
            var typeCh = typeMap[typeof instance[n]];
            var descriptor = Object.getOwnPropertyDescriptor(prototype, n);
            var isSetter = descriptor && lang_1.isPresent(descriptor.set);
            if (lang_1.isString(typeCh) && !n.startsWith('webkit') && isSetter) {
                props.push(typeCh + n);
            }
        }
    });
    // There is no point in using `Node.nodeValue`, filter it out
    descMap.set(fullName, type === Node ? props.filter(function (p) { return p != '%nodeValue'; }) : props);
}
function extractName(type) {
    var name = type['name'];
    if (name == 'Element')
        return '*';
    if (name == 'HTMLImageElement')
        return 'img';
    if (name == 'HTMLAnchorElement')
        return 'a';
    if (name == 'HTMLDListElement')
        return 'dl';
    if (name == 'HTMLDirectoryElement')
        return 'dir';
    if (name == 'HTMLHeadingElement')
        return 'h1,h2,h3,h4,h5,h6';
    if (name == 'HTMLModElement')
        return 'ins,del';
    if (name == 'HTMLOListElement')
        return 'ol';
    if (name == 'HTMLParagraphElement')
        return 'p';
    if (name == 'HTMLQuoteElement')
        return 'q,blockquote,cite';
    if (name == 'HTMLTableCaptionElement')
        return 'caption';
    if (name == 'HTMLTableCellElement')
        return 'th,td';
    if (name == 'HTMLTableColElement')
        return 'col,colgroup';
    if (name == 'HTMLTableRowElement')
        return 'tr';
    if (name == 'HTMLTableSectionElement')
        return 'tfoot,thead,tbody';
    if (name == 'HTMLUListElement')
        return 'ul';
    if (name == 'SVGGraphicsElement')
        return SVG_PREFIX + 'graphics';
    if (name == 'SVGMPathElement')
        return SVG_PREFIX + 'mpath';
    if (name == 'SVGSVGElement')
        return SVG_PREFIX + 'svg';
    if (name == 'SVGTSpanElement')
        return SVG_PREFIX + 'tspan';
    var isSVG = name.startsWith('SVG');
    if (name.startsWith('HTML') || isSVG) {
        name = name.replace('HTML', '').replace('SVG', '').replace('Element', '');
        if (isSVG && name.startsWith('FE')) {
            name = 'fe' + name.substring(2);
        }
        else if (name) {
            name = name.charAt(0).toLowerCase() + name.substring(1);
        }
        return isSVG ? SVG_PREFIX + name : name.toLowerCase();
    }
    else {
        return null;
    }
}
function isSVG(type) {
    return type['name'].startsWith('SVG');
}
var typeMap = { 'string': '', 'number': '#', 'boolean': '!', 'object': '%' };
//# sourceMappingURL=data:application/json;base64,